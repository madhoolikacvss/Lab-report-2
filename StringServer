#Lab Report 2

**TASK 1** 

When I created StringServer.java, I borrowed the ideas from NumberServer.java and modified the methods used there to suit String data type.

![My Code](https://github.com/madhoolikacvss/Lab-report-2/blob/main/code.jpg)


My main method from the class StringServer takes in an argument (the server number) given by a user from VSCode's terminal and uses Server.java to create a local server.
For example, I used the command `java StringServer 55100` where 55100 is the server number. It is important for the argument being passing in the terminal of the IDE is stringctly integer, and within the range 1024 to 49151 as the server numbers are restricted to this range.
The result of the execution of the above code was as follows:
![Launching the server](https://github.com/madhoolikacvss/Lab-report-2/blob/main/serverstart.jpg)


Then, I added the path to the url of the server, `/add-message?s=helooo`, which gave the following output
![First line](https://github.com/madhoolikacvss/Lab-report-2/blob/main/add1.jpg)

My code uses the method `handleRequest(URI url)` from the class Handler to read the path in the url and detect the query which is the relevant value for this method - heloo.
Here, as it was first time running the server, there were no preadded strings to be displayed, so the first line of the output is *helooo*

I then added changed the path to the url of the server to `/add-message?s=skidooosh`, which gave the following output
![Second line](https://github.com/madhoolikacvss/Lab-report-2/blob/main/add2.jpg)

Here, as I already ran the server with a path previously, the method `handleRequest(URI url)` already had the string `helooo` stored in the variable `sentence`. 
So when this url was run, the new parameter (skidooosh) was concatinated to the variable `sentence` with an escape character `\n` which also added a new line before the word.
Later on, I also ran the code again with integers and doubles as parameters for a query, and the server displayed those numbers correctly. 
This because the numbers when being concatinated to the variable `sentence` in my method `handleRequest(URI url)` typecasted them into Strings. 






